{
  "list": [{
    "name": "antd-admin",
    "git_url": "git://github.com/zuiidea/antd-admin.git",
    "author": "zuiidea",
    "description": "A admin dashboard application demo built upon Ant Design and Dva.js",
    "tags": ["react", "antd"],
    "coverPicture": "https://ucarecdn.com/3ba3280c-a0c0-4a8b-a2e3-ba38148121b6/",
    "readme": "# Antd Admin\n\n[![React Native](https://img.shields.io/badge/react-^15.4.1-brightgreen.svg?style=flat-square)](https://github.com/facebook/react)\n[![Ant Design](https://img.shields.io/badge/ant--design-^2.7.3-yellowgreen.svg?style=flat-square)](https://github.com/ant-design/ant-design)\n[![dva](https://img.shields.io/badge/dva-^1.1.0-orange.svg?style=flat-square)](https://github.com/dvajs/dva)\n\n[![GitHub issues](https://img.shields.io/github/issues/zuiidea/antd-admin.svg?style=flat-square)](https://github.com/zuiidea/antd-admin)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/zuiidea/antd-admin/pulls)\n[![MIT](https://img.shields.io/dub/l/vibe-d.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\n\n演示地址 <http://zuiidea.github.io/antd-admin/>\n\n备用地址 <http://47.92.30.98:8000>\n\n\n## 特性\n\n-   基于[react](https://github.com/facebook/react)，[ant-design](https://github.com/ant-design/ant-design)，[dva](https://github.com/dvajs/dva)，[Mock](https://github.com/nuysoft/Mock) 企业级后台管理系统最佳实践\n-   基于[Mock](https://github.com/nuysoft/Mock)实现脱离后端独立开发\n-   基于Antd UI 设计语言，提供后台管理系统常见使用场景\n-   基于[dva](https://github.com/dvajs/dva)动态加载 Model 和路由，按需加载\n-   浅度响应式设计\n\n## 注意\n如果使用到roadhog，且出现接口404\n-  保证`package.json`里没有`roadhog`\n-  删除`node_modules`\n- `npm i`\n- `npm i roadhog@0.6.0-beta.3 -g`\n\n## 更新日志\n\n### 4.2\n`2017-04-28`\n\n-   修改user相关API使用`Restful`风格\n-   增加user页面多条件查询[#266](https://github.com/zuiidea/antd-admin/issues/226)\n-   修复菜单默认高亮[#201](https://github.com/zuiidea/antd-admin/issues/201)\n\n`2017-04-21`\n\n-   重写Menu，Bread组件及配置文件，[说明](https://github.com/zuiidea/antd-admin/wiki/%E8%8F%9C%E5%8D%95%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6)\n\n### 4.1\n\n`2017-04-14`\n\n-   升级开发工具为[roadhog](https://github.com/sorrycc/roadhog)\n-   使用`roadhog`的mock功能\n-   增强`utils/request.js`跨域处理能力\n\n## 开发构建\n\n### 目录结构\n\n```bash\n├── /mock/           # 数据mock的接口文件\n├── /dist/           # 项目输出目录\n├── /src/            # 项目源码目录\n│ ├── /components/   # UI组件及UI相关方法\n│ │ ├── skin.less    # 全局样式\n│ │ └── vars.less    # 全局样式变量\n│ ├── /routes/       # 路由组件\n│ │ └── app.js       # 路由入口\n│ ├── /models/       # 数据模型\n│ ├── /services/     # 数据接口\n│ ├── /utils/        # 工具函数\n│ │ ├── config.js    # 项目常规配置\n│ │ ├── menu.js      # 侧边菜单配置\n│ │ ├── mock.js      # 数据拦截配置\n│ │ ├── config.js    # 项目常规配置\n│ │ ├── request.js   # 异步请求函数\n│ │ └── theme.js     # 项目需要在js中使用到样式变量\n│ ├── route.js       # 路由配置\n│ ├── index.js       # 入口文件\n│ └── index.html     \n├── package.json     # 项目信息\n└── proxy.config.js  # 数据mock配置\n```\n\n文件夹命名说明:\n\n-   components：组件（方法）为单位以文件夹保存，文件夹名组件首字母大写（如`DataTable`），方法首字母小写（如`layer`）,文件夹内主文件与文件夹同名，多文件以`index.js`导出对象（如`./src/components/Layout`）\n-   routes：页面为单位以文件夹保存，文件夹名首字母小写（特殊除外，如`UIElement`）,文件夹内主文件以`index.js`导出，多文件时可建立`components`文件夹（如`./src/routes/dashboard`），如果有子路由，依次按照路由层次建立文件夹（如`./src/routes/UIElement`）\n\n### 快速开始\n\n克隆项目文件:\n\n    git clone https://github.com/zuiidea/antd-admin.git\n\n进入目录安装依赖:\n\n    npm i 或者 yarn install\n    npm i roadhog@0.6.0-beta.3 -g\n\n开发：\n\n```bash\nnpm run dev    # 使用mock拦截请求，数据存储在localStroge里\n\n打开 http://localhost:8000\n```\n\n构建：\n\n```bash\nnpm run build\n\n将会生成dist目录\n```\n\n代码检测：\n\n```bash\nnpm run lint\n```\n\n## 参考\n\n用户列表：<https://github.com/dvajs/dva/tree/master/examples/user-dashboard>\n\ndashboard设计稿：<https://dribbble.com/shots/3108122-Dashboard-Admin> （已征得作者同意）\n\n## 截屏\n\nweb\n\n![](assets/demo4.gif)\n\n移动\n\n![](assets/demo3.gif)\n",
    "deployedAt": "2017-04-30T07:56:11.280Z"
  }, {
    "name": "antd-admin-boilerplate",
    "git_url": "git://github.com/myqianlan/antd-admin-boilerplate.git",
    "author": "myqianlan",
    "description": "以 antd 为基础组件构建的一套中后台管理系统的基本架构模板",
    "tags": ["antd", "react"],
    "coverPicture": null,
    "readme": "# antd-admin-boilerplate\n以 antd 为基础组件构建的一套中后台管理系统的基本架构模板\n\n## 预览\n\nhttp://myqianlan.com/antd-admin-boilerplate/dist/#/login\n\n账户密码随便输入即可\n\n## 目的\n\n使用 antd 和 react 来构建中后台系统，从上家公司开始，已经用来构建过三四个系统了，这个算是沉淀下来的一些东西，放出来给大家参考参考吧。\n\n## 技术栈\n\n- react\n- antd\n- webpack\n- es6(babel)\n\n## 兼容性\n\n原则上支持 IE9+ 及现代浏览器\n\n## 环境\n\n- node 4 LTS 版本\n- npm 建议 3+\n- webpack 1+\n\n> npm 建议使用cnpm, 通过设置 alias 的方式;(在私有npm还没搭建起来的时候)\n\n## 开发\n\n```bash\n\n    cpm install -g webpack webpack-dev-server\n\n    cnpm install\n\n    npm run dev\n\n```\n### 设置 api 代理\n\n可在 webpack.dev.config.js 里面的 devServer 配置项设置 api 代理\n\n## 其他\n\n其他功能问题请阅读本项目源代码，或者提 issue\n\n## 鸣谢\n\n其中很多代码参考了前同事范峻植的最初版本，在此表示感谢。\n\n## License\n\nMIT\n",
    "deployedAt": "2017-05-10T09:56:45.651Z"
  }, {
    "name": "chat",
    "git_url": "git://github.com/RaoHai/chat.git",
    "author": "RaoHai",
    "description": "A Chat Scaffold based on antd and dva:",
    "version": "",
    "tags": [],
    "coverPicture": "https://ucarecdn.com/c1a43345-d5ed-4167-875c-4680471903f2/",
    "readme": "# chat\nA Chat Scaffold based on antd and dva:\n\nScreenshots:\n-----\n\n![](https://cloud.githubusercontent.com/assets/566097/21448864/2dc1a59c-c922-11e6-9b80-726593d8163d.png)\n\n![](https://cloud.githubusercontent.com/assets/566097/21494490/f28c2eb0-cc4c-11e6-83b8-723ae1423328.png)\n\nFirebase Structure\n-----\n\n```\nroot: {\n  conversations: { // conversations\n    '-2h6WJbFPBxUs15iB15DnSAIRTyP2-1482823102860': {\n      participants: {\n        '2h6WJbFPBxUs15iB15DnSAIRTyP2': user,\n        '1482823102860': user\n      },\n      chats: {\n        '-KZzCufnRDtS4h0q9fL': {\n          content: '',\n          time: '',\n          user: {}\n        }\n      }\n    },\n    ...\n  },\n  user: { // online users\n    '2h6WJbFPBxUs15iB15DnSAIRTyP2': user,\n    ...\n  }\n}\n```\n\n\nInstall\n------\n\n```\ngit clone https://github.com/RaoHai/chat.git\ncd chat\nnpm install\nnpm start // enjoy :D\n\n```\n"
  }, {
    "name": "dva-example-user-dashboard",
    "git_url": "git://github.com/dvajs/dva-example-user-dashboard.git",
    "author": "dvajs",
    "description": "👲 👬 👨‍👩‍👧 👨‍👩‍👦‍👦",
    "tags": ["dva", "react", "antd"],
    "coverPicture": "https://ucarecdn.com/f9569dff-f570-494d-a16a-11dfe8bbefd1/",
    "readme": "# dva-example-user-dashboard\n\n详见[《12 步 30 分钟，完成用户管理的 CURD 应用 (react+dva+antd)》](https://github.com/sorrycc/blog/issues/18)。\n\n---\n\n<p align=\"center\">\n  <img src=\"https://zos.alipayobjects.com/rmsportal/bmkNCEoluwGaeGjYjInf.png\" />\n</p>\n\n## Getting Started\nInstall dependencies.\n\n```bash\n$ npm install\n```\n\nStart server.\n\n```bash\n$ npm start\n```\n\nIf success, app will be open in your default browser automatically.\n",
    "deployedAt": "2017-04-29T09:28:41.593Z"
  }, {
    "name": "dva-hackernews",
    "git_url": "git://github.com/dvajs/dva-hackernews.git",
    "author": "dvajs",
    "description": "HackerNews clone built with Dva.",
    "version": "",
    "tags": ["dva", "react", "hacknews"],
    "coverPicture": "https://ucarecdn.com/399ead84-8022-42c1-b8fd-c32526b39cdc/",
    "readme": "# dva-hackernews\n\nHackerNews clone built with [Dva](https://github.com/dvajs/dva), based on [vue-hackernews-2.0](https://github.com/vuejs/vue-hackernews-2.0).\n\n<p align=\"center\">\n  <a href=\"http://dvajs.github.io/dva-hackernews/\">\n    <img src=\"https://zos.alipayobjects.com/rmsportal/XUTutezexphTbgs.png\" width=\"700\" />\n    <br />\n    Live Demo\n  </a>\n</p>\n\n## TODO\n\n- [x] Item Page\n- [x] Comment Page\n- [x] User Page\n- [x] Real-time List Update with Animation\n- [x] Router Transform Animation\n- [ ] SSR\n- [ ] Dynamic Router\n- [ ] Handle loading status automatically\n- [ ] Render Performance\n\n## Run Locally\n\nInstall dependencies.\n\n```bash\n$ npm install\n```\n\nStart server.\n\n```bash\n$ npm start\n```\n\nOpen app in browser.\n\n```bash\n$ open http://localhost:8989/\n```\n"
  }, {
    "name": "react-antd",
    "git_url": "git://github.com/sosout/react-antd.git",
    "author": "sosout",
    "description": "基于react + redux + immutable + less + ES6/7 + webpack + fetch + react-router + antd(1.x)实现的SPA后台管理系统模板",
    "tags": ["react", "antd", "redux"],
    "coverPicture": null,
    "readme": "# react-antd(新版后台很快就与大家见面了)\n[![React Native](https://img.shields.io/badge/react-^15.3.2-brightgreen.svg?style=flat-square)](https://github.com/facebook/react)\n[![Redux](https://img.shields.io/badge/redux-^4.4.5-yellowgreen.svg?style=flat-square)](https://github.com/reactjs/redux)\n[![Redux Immutablejs](https://img.shields.io/badge/immutablejs-^0.0.8-orange.svg?style=flat-square)](https://github.com/indexiatech/redux-immutablejs)\n[![Ant Design](https://img.shields.io/badge/ant--design-^2.7.2-yellowgreen.svg?style=flat-square)](https://github.com/ant-design/ant-design)\n\n[![MIT](https://img.shields.io/dub/l/vibe-d.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n## 前言\n>  本工程主要基于react + redux + immutable + less + ES6/7 + webpack + fetch + react-router + antd(1.x)实现的SPA后台管理系统模板。\n\n>  如果觉得不错的话，请star一下吧 😊\n\n>  编码时间：8:00——9:30, 下班时间——24:00，其他时间要工作。代码未优化，处女座代码必须要优化。由于代码延后，先向大家说声抱歉。您有什么问题可以私信我segmentfault。\n\n[线上demo](http://antd.sosout.com/)\n\n## 关于我自己\n>  使用技术： react + redux + immutable + less + ES6/7 + webpack + fetch + react-router + antd(1.x)\n\n>  项目说明： 此项目是本人空余时间搭建的。希望大家提供宝贵的意见和建议，谢谢。\n\n>  邮&emsp;&emsp;箱： sosout@yeah.net\n\n>  个人网站： http://www.sosout.com/\n\n>  个人博客： http://blog.sosout.com/\n\n>  个人简书： http://www.jianshu.com/users/23b9a23b8849/latest_articles\n\n>  segmentfault：https://segmentfault.com/u/sosout\n\n### 下载\n\n```\n# git clone\n\ngit clone https://github.com/sosout/react-antd.git\n\ncd react-antd\n```\n\n### 安装\n```bush\n// 安装前请先确保已安装node和npm\n// 需要提前在全局安装webpack和webpack-dev-server,如果已安装请忽略\nnpm install webpack -g\nnpm install webpack-dev-server -g\n\n// 安装成功后,再安装依赖\nnpm install\n```\n### 运行\n```bush\nnpm run dev （正常编译模式，注意：index.html里必须手动引用app.css，<link href=\"/antd/dist/app.css\" rel=\"stylesheet\" />，否则没有样式）\n\nnpm run hot （热替换编译模式，注意：热替换模式下index.html里去掉引用app.css）\n  \nnpm run dist （发布生产版本，对代码进行混淆压缩，提取公共代码，分离css文件）\n```\n\n### 访问\n在浏览器地址栏输入[http://127.0.0.1:8888](http://127.0.0.1:8888)\n\n### 目标功能\n- [x] 登录页面\n- [x] 全站布局\n- [x] 全站路由\n- [ ] 对接接口，优化代码(冗余代码，不规则写法，界面样式)\n- [ ] 后台系统常用场景会逐个完善\n\n####历史更新\n  *2017.02.20*\n\n  \t1. 初始化项目目录;\n\n  \t2. webpack配置完成; \n\n  \t3. 登录退出;\n\n  \t4. 整体布局;\n\n  \t5. 菜单映射路由;\n",
    "deployedAt": "2017-05-10T10:23:09.622Z"
  }, {
    "name": "react-antd-admin",
    "git_url": "git://github.com/fireyy/react-antd-admin.git",
    "author": "fireyy",
    "description": "React Ant.design Admin UI",
    "tags": ["react", "antd"],
    "coverPicture": "https://ucarecdn.com/7c2b3bca-5824-4601-b5c1-8add07d03ae4/",
    "readme": "## React Ant.Design Admin UI\n\n<p align=\"center\">\n  <a href=\"https://react-antd-admin.now.sh\" target=\"_blank\">\n    <img src=\"demo.png\" width=\"700px\">\n    <br>\n    Live Demo\n  </a>\n</p>\n\n## Features\n\n- [React](https://facebook.github.io/react/)\n- [Redux](https://github.com/reactjs/redux)\n- [Ant.Design](http://ant.design/)\n- [Babel](https://babeljs.io/)\n- [webpack](https://webpack.github.io/)\n- [mocha](https://mochajs.org/)\n- [enzyme](https://github.com/airbnb/enzyme)\n\n## Getting Started\n\nJust clone the repo and install the necessary node modules:\n\n```shell\n$ git clone https://github.com/fireyy/react-antd-admin\n$ cd react-antd-admin\n$ npm install\n```\n\n## Run Dev\n\n```shell\n$ npm run dev\n```\n\n## Run test spec\n\n```shell\n$ npm run test\n```\n\n## Build\n\n```shell\n$ npm run build\n```\n\n## Changelog\n\n### 0.1.2\n\n* 更新依赖组件到最新版本\n* 增加 page2 demo\n",
    "deployedAt": "2017-05-10T09:39:08.923Z"
  }, {
    "name": "react-antd-admin-jiangxy",
    "git_url": "git://github.com/jiangxy/react-antd-admin.git",
    "author": "jiangxy",
    "description": "用React和Ant Design搭建的一个通用管理后台",
    "tags": ["react", "antd"],
    "coverPicture": "https://ucarecdn.com/2432a297-b1f9-46b7-ade7-cfcaef91955d/",
    "readme": "# React通用后台\n\n目标是快速搭建一个可用的后台界面，可以先看下[DEMO(普通)](http://jiangxy.github.io/react-antd-admin) / [DEMO(TAB模式)](http://jiangxy.github.io/react-antd-admin/tabMode)，用户名/密码：guest/guest。友情提示：这个DEMO还是有点大的，加载可能稍慢，注意网速。。。\n\n也可以[点击这里](docs/Screenshot.md)查看截图，包含一些主要特性的演示。\n\n如果对React或Ant Design感兴趣，但又不知如何入手的话，也可以参考下这个项目。\n \n* [这是个啥东西](#需求背景)\n* [Quick Start](#quick-start)\n* [更新记录](CHANGELOG.md)\n* [TODO](docs/TODO.md)\n* [一些说明](#一些说明)\n* [更多文档](docs/README.md)\n\n## 需求背景\n\n其实总结下就一句话：简化后端人员的前端开发。。。\n\n虽然俺是个java开发，但总是难免要做一些前端的东西。比如各种内部系统，各种运营后台，总要有个界面给人用的吧。如果是自己用的话当然命令行就可以将就下了。。。\n\n内部系统么，公司也不会很重视，不会有专业的前端来搞。后端人员自己搞搞，能用就行了。\n\n然而每次写前端都很痛苦，无论以前用velocity+jquery+bootstrap，还是现在用React。首先有很多重复的工作，很多后台界面其实都长得差不多；其次有时会为一些很小的需求投入很大精力，写很多业务逻辑，但这些代码都是不可复用的，感觉花这么多时间不值得，毕竟不是本职工作啊，只是个二手前端。。。甚至有时折腾css就能搞一天。。。\n\n于是就想着能否一劳永逸，搞个比较通用的东西出来，**尽量用写配置的方式替代写代码**。从某种角度上说，和[Metronic](http://keenthemes.com/preview/metronic/)/[AdminLTE](https://almsaeedstudio.com/preview)的目标有点相似。正好前段时间在研究[Ant Design](http://ant.design)，做了一些尝试，于是有了这个项目。当然并不完美，对于React和Ant Design，我也是边学边用的。\n\n首先看下，常见的后台系统都是什么样子的？\n\n![](docs/overview.png)\n\n是不是大部分后端系统的界面都差不多这个样子？分为几个主要的部分：\n\n* 侧边栏：上面是一个logo，下面是可展开的各级菜单。点击菜单项时，右边会展示相应的内容。\n* Header：展示当前登录的用户名和面包屑导航，还可能有自定义的一些菜单之类\n* 内容区：展示具体的内容，跟业务有关的\n* Footer：展示copyright之类的\n* 还有些看不到的，比如登录、注销等\n\n于是我做的**第一件事**，就是搭建一个框架，用配置文件的方式，生成这样一个界面。你可以定义自己的侧边栏（参考[src/menu.js](src/menu.js)），定义点击侧边栏菜单时在右边渲染什么组件（参考[src/index.js](src/index.js)，其实就是React Router的配置），包括header/footer/登录校验/单点登录等，都可以配置（参考[src/config.js](src/config.js)）。\n\n在此基础上，我只要根据不同的后台系统的业务逻辑，去写不同的React组件，再配置下菜单就可以了。貌似简化很多了。缺点就是所有后台都长一个样子。。。\n\n但能否更简化些呢？在各种运营后台中，最常见的操作是什么？我的感觉，最常见的就是各种数据库表的CRUD。我们经常赋予数据库字段各种业务意义。比如将某条记录的status字段改为-1，表示屏蔽这个商品；或者新增一个商品，其实就是某个表新增一条记录之类的。运营的很多操作，是不是都能简化成CRUD？于是我又做了**第二件事**：写了一个通用的CRUD组件，我称之为DBTable。大概长这个样子：\n\n![](docs/DBTable.png)\n\n也是分为几个部分：\n\n* 查询条件区：其实就是个表单，所有表单项都是由配置文件生成的（参考[src/schema/test.querySchema.js](src/schema/test.querySchema.js)），支持各种数据类型\n* 各种操作：提供常用的CRUD/导入/导出等操作\n* 查询结果展示：就是一个表格，这个表格的schema也是可配置的（参考[src/schema/test.dataSchema.js](src/schema/test.dataSchema.js)）\n* 针对单条数据的操作：也是可配置的（参考[src/schema/testAction.dataSchema.js](src/schema/testAction.dataSchema.js#L52)）\n\n另外提醒下，1.4.0版本之后，querySchema和dataSchema不一定要用js文件配置了，可以从服务端异步加载了，参考[异步schema相关配置](docs/AsyncSchema.md)。\n\n使用者只用关心自己的schema文件就可以了，不用在意渲染出来是什么样子。利用DBTable组件，就可以快速实现对某个表的CRUD了（其实不只可以用于数据库，符合这种操作模式的都可以用）。缺点就是没有了明确的业务含义，运营MM们可能不会用。。。她们又不知道CRUD是啥。所以需要培训下，但也是套近乎的好机会啊😄。\n\n但是且慢，只有界面是不够的，**如何跟后端对接**？于是我又定义了[后端接口格式](docs/Ajax.md)。只要按这个格式去写后端接口，就可以跟这套通用后台无缝对接。如果你跟我一样是个懒人，而且恰巧是用java的，又恰巧后端是基于Spring的，那也可以使用我提供的一个[小工具](https://github.com/jiangxy/react-java-goos)直接生成后端接口，然后填写自己的业务逻辑就可以了。\n\n使用这套工具，如果一切顺利的话，你能很快的搭出一个后台界面，包含基础的登录/菜单/导航/CRUD/导入/导出等功能，并且界面&体验也还算看得过去，不用任何编码，只是修改配置。\n\n我尽量做到**配置优于代码**，尽量少写代码。但完全不写代码是不可能的，尤其是有个性化需求时，这就要自己权衡了。这套工具比较适合项目初期做个原型、或者对后台要求不高的情况。\n\n## Quick Start\n\n在自己的机器上调试：\n\n1. 保证node版本5.3+，npm版本3.3+\n2. clone下来后，`npm install`，安装必要的依赖\n3. `npm run dev`，启动webpack-dev-server，打开浏览器`http://localhost:8080`查看效果。默认是debug模式，不会请求后端接口，所有数据都是mock的，相关配置见[src/config.js](src/config.js)\n4. 如果有必要的话可以把logLevel设置为debug（见[src/config.js](src/config.js)），会输出详细的debug日志，打开chrome的console就可以看到。\n\n用在自己的项目中：\n\n1. 保证node版本5.3+，npm版本3.3+\n2. clone下来后，`npm install`，安装必要的依赖\n3. 参考[src/menu.js](src/menu.js)，按自己的需要配置侧边栏和顶部菜单\n4. 修改[src/index.js](src/index.js)中的路由表，保证和menu.js中的菜单项一致，否则可能404\n5. 如果要用DBTable组件的话，参考[src/schema](src/schema)下的例子，编写自己的querySchema和dataSchema文件。在路由表中配置DBTable组件时，要把表名作为props传入，类似`<Route path=\"option1\" tableName=\"test\" component={DBTable}/>`。\n6. 修改[src/config.js](src/config.js)中相关配置，比如项目名、footer、单点登录等等。\n7. `npm run prod`，编译js文件，然后将dist目录下的所有js/css/html文件拷贝到自己的工程中，前端的工作就完成了。一般会有一个index.html，一个bundle.min.css，以及多个js文件，跟是否使用动态路由有关。\n8. 开发后端接口，接口规范见[这里](docs/Ajax.md)。如果是java后端，可以使用[这个工具](https://github.com/jiangxy/react-java-goos)帮你生成。\n9. 启动你的web服务，访问`index.html`查看效果。\n\n其他一些命令:\n\n1. `npm run eslint`/`npm run stylelint`/`npm run lesshint`，一些lint工具。\n2. `npm run clean`，删除dist目录下的bundle*.js。\n\n## 一些说明\n\n### 安全/权限问题\n\n目前对安全&权限都没考虑进去，如果有这方面的要求，只能后端校验了。在请求后端接口时校验用户的身份和权限。\n\n权限问题也很麻烦，感觉不太好做成通用的东西，如果有需求的话，还是定制开发比较好。\n \n### 兼容性\n\n能力所限，只能保证chrome中正常使用。。。话说在各种内部系统中，要求只能用chrome也挺常见吧。\n\n如果我解决了兼容性问题，就不是二手前端了。。。\n\n另外由于我是在mac下进行开发的，所以对windows下的情况测试的比较少，有问题欢迎提issue，我尽力解决。\n\n### bundle size\n\n单页应用的首屏渲染一直都是个大问题。webpack打包出来的bundle.js一般都很大，虽然我想了很多办法去优化，但总是还会有1M多，实在减不下去了。。。所以应用到外网时要小心，初次加载时可能比较慢。\n\n内网的话就无所谓了，一般网速都不是问题。\n",
    "deployedAt": "2017-05-10T10:09:39.074Z"
  }, {
    "name": "react-antd-demo",
    "git_url": "git://github.com/luozhihao/react-antd-demo.git",
    "author": "luozhihao",
    "description": "基于react及antd的demo",
    "tags": ["antd", "react"],
    "coverPicture": null,
    "readme": "## react-antd-demo\n基于react及antd的demo\n\n## 演示地址\ndemo: [http://luozhihao.github.io/react-antd-demo/index.html](http://luozhihao.github.io/react-antd-demo/index.html)\n\n## 文档说明\n地址：[http://www.cnblogs.com/luozhihao/p/5579786.html](http://www.cnblogs.com/luozhihao/p/5579786.html)\n\n## 本地运行\n> npm install\n\n> npm run dev\n",
    "deployedAt": "2017-05-10T10:22:39.679Z"
  }, {
    "name": "react-redux-antd",
    "git_url": "git://github.com/Justin-lu/react-redux-antd.git",
    "author": "Justin-lu",
    "description": "react redux for CMS/Enterprise class App/ERP/Admin with ant-design",
    "tags": ["redux", "antd", "cms", "react"],
    "coverPicture": null,
    "readme": "## Feature List\n- hot reloading/browser-sync/redux devtools on dev build\n![](http://ww1.sinaimg.cn/large/785cd1e3gw1f69xb4vta2g20tb0fs7c5.gif)\n- minify/chunkhash/trackJS on production build\n![](http://ww4.sinaimg.cn/large/785cd1e3gw1f69xey2om7g20tb0fs1kx.gif)\n- eslint both of terminal and pre-commit\n![](http://ww1.sinaimg.cn/large/785cd1e3gw1f69xiq41uog20tb0fsn8e.gif)\n![](http://ww2.sinaimg.cn/large/785cd1e3gw1f69zn0p20gj21je0jan1f.jpg)\n- unit test of react/redux\n![](http://ww3.sinaimg.cn/large/785cd1e3gw1f69x6lccmij21020m2juk.jpg)\n![](http://ww2.sinaimg.cn/large/785cd1e3gw1f69zp1v97ij21kw0u8td8.jpg)\n- es6/webapck\n- sass support\n- UI Kit: Ant Design\n- isomorphic-fetch\n- mock data\n- example app\n- ...\n\n## Getting Started\n### install\n\n```\nnpm install --global yarn # install yarn\ngit clone git@github.com:Justin-lu/react-redux-antd.git demo\ncd demo\nyarn\n\n# run dev\nnpm run start\n# run mock server\nnpm run start:mock\n```\n\n### npm script\n\n```shell\n# dev start with test/lint\nnpm run start \n\n# prodction start with browser-sync server\nnpm run start:prod\n\n# production build\nnpm run build\n\n# mock data\nnpm run start:mock\n\n# run test\nnpm run test\n\n# generate test cover report\nnpm run test:cover\n\n```\n\n### eslint\n\n- enable pre-commit hook\n\n```shell\ncd .git/hooks/ && ln -s ./../../tools/pre-commit pre-commit\n```\n\n## Structure\n\n```shell\n├── README.md\n├── coverage # test coverage report\n├── dist  # production build directory\n│   ├── 269268ade790db48e9dcc5eb0db587cd.jpg\n│   ├── antd.f7f5aa5b8e507559a22db55944433a23.css\n│   ├── app.89f9817729a2b19dc35586b6f0505c83.css\n│   ├── app.fa0e73813f3ce3a7605d.js\n│   ├── favicon.ico\n│   └── index.html\n├── package.json\n├── src  # source directory\n│   ├── actions  # write your redux action here\n│   │   ├── users.js  # redux action\n│   │   └── users.spec.js  # redux action test\n│   ├── components  # write your redux components here\n│   │   ├── CustomTable.js\n│   │   └── NotFoundPage  # this is a folder which include NotFoundPage.js, NotFoundPage.scss, NotFoundPage.spec.js\n│   ├── config\n│   │   └── api.js  # write your api config here\n│   ├── constants  # some constants\n│   │   └── actionTypes.js\n│   ├── containers  # write your redux containers here\n│   │   ├── AccessControl.js\n│   │   ├── App  # App.js App.scss\n│   ├── data\n│   │   └── db.json  # mock data file\n│   ├── favicon.ico\n│   ├── index.html  # template index.html\n│   ├── index.js  # entry file\n│   ├── reducers  # write your redux reducers here.\n│   │   ├── index.js  # entry file\n│   │   ├── initialState.js  # put all of the initial state in here\n│   │   ├── users.js  # users reducers\n│   │   └── users.spec.js  # users reducers spec\n│   ├── routes.js  # routes\n│   ├── store  # store\n│   │   ├── configureStore.dev.js\n│   │   ├── configureStore.js\n│   │   └── configureStore.prod.js\n│   └── utils  # utils file\n│       └── cFetch.js\n├── tools  # some tools script\n│   ├── build.js\n│   ├── chalkConfig.js\n│   ├── distServer.js\n│   ├── mock.js\n│   ├── pre-commit\n│   ├── srcServer.js\n│   ├── startMessage.js\n│   ├── testSetup.js\n│   └── updateIndexHTML.js\n├── webpack.config.dev.js  # webpack config of dev\n└── webpack.config.prod.js  # webpack config of production\n```\n",
    "deployedAt": "2017-05-10T09:38:01.324Z"
  }, {
    "name": "ui",
    "git_url": "git://github.com/tianzx/ui.git",
    "author": "tianzx",
    "description": "frontend project separate from backend",
    "tags": ["react", "antd"],
    "coverPicture": null,
    "readme": "## React Ant.Design Admin UI\n\n## Features\n\n- [React](https://facebook.github.io/react/)\n- [Redux](https://github.com/reactjs/redux)\n- [Ant.Design](http://ant.design/)\n- [Babel](https://babeljs.io/)\n- [webpack2](https://webpack.github.io/)\n- [mocha](https://mochajs.org/)\n- [enzyme](https://github.com/airbnb/enzyme)\n- [Travis](https://travis-ci.org/)\n- [Docker](https://www.docker.com/)\n\n## Getting Started\n\nJust clone the repo and install the necessary node modules:\n\n```shell\n$ git clone https://github.com/tianzx/ui.git\n$ cd ui\n$ npm install\n$ npm start\n```\n\n## Run test spec\n\n```shell\n$ npm run test\n```\n\n## Run production build\n\n```shell\n$ vi /etc/environment and export NODE_ENV='production'\n$ npm run build\n```\n\nin your local machine\n```shell\n$ scp -r localPath/ui/dist/  remotePath:ui\n```\n\nin your remote machine\n```shell\n$ mv dist/* ./\n$ cnpm install pm2 -g \n$ pm2 start server.js\n```\n\nnotation: before execute the command ,you must ensure you have executed the command\n\n```shell\n$ cnpm install rimraf -g\n```\n\n## NOTICE\n\n### replace npm with cnpm(in China)\n&emsp;&emsp;&emsp;&emsp;https://npm.taobao.org/\n### add n to admin nodejs version\n&emsp;&emsp;&emsp;&emsp;https://github.com/tj/n\n\n### update npm \n&emsp;&emsp;&emsp;&emsp;cnpm update -g npm\n",
    "deployedAt": "2017-05-10T09:52:24.204Z"
  }]
}